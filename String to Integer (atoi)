class Solution {
public:
    int myAtoi(string s) {
        int i=0;
        int pos=1;
        string ans="";
        long long ans1=0;
        int ok=0;
        while(i<s.length())
        {
            if(s[i]==32)
            {
                i++;
                continue;
            }
              else if(s[i]=='+' || s[i]=='-')
            {
                //cout<<"fs";
                if(s[i]=='-')
                    pos=0;
                i++;
                if(s[i]>=48  && s[i]<=57)
                {
                    while(i<s.length() && s[i]==48)
                    {
                        i++;
                    }
                    while(i<s.length() && (s[i]>=48 && s[i]<=57))
                    {
                          
                            ans+=s[i];
                        if(ans.size()>10)
                        { 
                             ok=1;
                            break;
                        }
                          i++;
                    }
                }
                break;
            }
            else if(isalpha(s[i]) || !(s[i]>=48 && s[i]<=57))
            {
                break;
            }
            else if(i<s.length() && s[i]>=48 && s[i]<=57)
            {
                  
                    while(i<s.length() && s[i]==48)
                    {
                        i++;
                    }
                    while(i<s.length() && (s[i]>=48 && s[i]<=57))
                    {
                          
                            ans+=s[i];
                        if(ans.size()>10)
                        { 
                             ok=1;
                            break;
                        }
                          i++;
                    }
                break;
            }
            if(ok)
                break;
            i++;
        }
        
        for(int i=0;i<ans.size();i++)
        {
            ans1+=(ans[i]-'0')*pow(10,ans.size()-1-i);
        }
        if(!pos)
            ans1=-ans1;
        cout<<ans1;
        if(ans1>INT_MAX)
        {
            return INT_MAX;
        }
        else if(ans1<INT_MIN)
        {
            return INT_MIN;
        }
        return (int)ans1;

    }
};
