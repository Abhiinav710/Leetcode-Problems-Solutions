/* Problem Statement-
You are given an array of integers nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position.
Return the max sliding window.
*/

//Solution:

class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        int n=nums.length;
        int res[]= new int[n-k+1];
        Deque<Integer> dq= new ArrayDeque<>();
        int idx=0;
        for(int i=0;i<n;i++){
            while(!dq.isEmpty()&&dq.peek()==i-k)
                dq.pop();
            while(!dq.isEmpty()&&nums[dq.peekLast()]<=nums[i])
                dq.pollLast();
            
            dq.addLast(i);
            if(i>=k-1){
                res[idx++]=nums[dq.peek()];
            }
            
        }
        
        return res;
    }
}
