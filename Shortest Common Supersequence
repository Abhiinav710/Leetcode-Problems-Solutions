class Solution {
public:
    
    string shortestCommonSupersequence(string s1, string s2) {
     
        int m= s1.size(), n= s2.size();
        int dp[m+1][n+1];
        for(int i=0; i<=m; i++) dp[i][0] = 0;
        for(int j=0; j<=n; j++) dp[0][j] = 0;
        
        int i,j;
        
        for( i=1; i<=m; i++){
            for(j=1; j<=n; j++){
                
                if(s1[i-1]==s2[j-1])
                    dp[i][j] = 1+dp[i-1][j-1];
                
                else dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
                
            }
        }
      
        string res="";
      i=m,j=n;  
        while(i>0 && j>0){
            
            if(s1[i-1] == s2[j-1]){
                res+=s1[i-1];
                i--,j--;
            }
            else if(dp[i-1][j]>dp[i][j-1]){
                res+=s1[i-1];
                i--;
            }
            else{
                res+=s2[j-1];
                j--;
            }
            
        }
        
        while(i>0) {
            res+= s1[i-1];i--;
        }
        while(j>0){
            res+=s2[j-1]; j--;
        }
        reverse(res.begin(),res.end());
        return res;
    }
};
